# Generated by Django 4.1.7 on 2023-03-14 21:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_course', models.IntegerField(verbose_name='Номер курса')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_department', models.CharField(max_length=70, verbose_name='Название кафедры')),
            ],
            options={
                'verbose_name': 'Название кафедры',
                'verbose_name_plural': 'Кафедры',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='EducationalForms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_educational_form', models.CharField(max_length=30, verbose_name='Название формы обучения')),
            ],
            options={
                'verbose_name': 'Форма обучения',
                'verbose_name_plural': 'Формы обучения',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_group', models.CharField(max_length=30, verbose_name='Название группы')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='LessonsTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_lesson', models.IntegerField(verbose_name='Номер пары')),
                ('time_lesson', models.CharField(max_length=20, verbose_name='Время пары')),
            ],
            options={
                'verbose_name': 'Пара',
                'verbose_name_plural': 'Пары',
                'ordering': ['-number_lesson'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Наименование')),
                ('content', models.TextField(blank=True, verbose_name='Контент')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_support', models.CharField(max_length=100, verbose_name='Имя поддержки')),
                ('email_support', models.EmailField(max_length=254, verbose_name='Почта поддержки')),
                ('message_support', models.CharField(max_length=300, verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'Поддержка',
                'verbose_name_plural': 'Поддержка',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_teacher', models.CharField(max_length=50, verbose_name='ФИО преподавателя')),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='WeekDays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_day', models.CharField(max_length=20, verbose_name='Название дня недели')),
            ],
            options={
                'verbose_name': 'День недели',
                'verbose_name_plural': 'Дни недели',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_subject', models.CharField(max_length=50, verbose_name='Название предмета')),
                ('hours', models.IntegerField(default=1, verbose_name='Часы')),
                ('exam_form', models.CharField(max_length=20, verbose_name='Экзаменационная форма')),
                ('image_subject', models.ImageField(default='subjects_images/default.jpg', upload_to='subjects_images/')),
                ('num_cub', models.CharField(blank=True, max_length=20, verbose_name='Кабинет')),
                ('id_course', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.courses', verbose_name='Курс')),
                ('id_department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.departments', verbose_name='Название кафедры')),
                ('id_educational_form', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.educationalforms', verbose_name='Форма обучения')),
                ('id_group', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.groups', verbose_name='Номер группы')),
                ('id_teacher', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.teachers', verbose_name='Преподаватель')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_student', models.CharField(max_length=50, verbose_name='ФИО студента')),
                ('id_course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='Schedule.courses', verbose_name='Номер курса')),
                ('id_department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='Schedule.departments', verbose_name='Кафедра')),
                ('id_educational_form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='Schedule.educationalforms', verbose_name='Форма обучения')),
                ('id_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='Schedule.groups', verbose_name='Группа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Логин студента')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
                'ordering': ['-id_course'],
            },
        ),
        migrations.CreateModel(
            name='Schedules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_group', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.groups', verbose_name='Группа')),
                ('id_lessons_time', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.lessonstime', verbose_name='Номер пары')),
                ('id_subject', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.subjects', verbose_name='Предмет')),
                ('id_week_day', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.weekdays', verbose_name='День недели')),
            ],
            options={
                'verbose_name': 'Расписание',
                'verbose_name_plural': 'Расписание',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_attendance', models.DateField(verbose_name='Дата посещаемости')),
                ('attendance', models.BooleanField(default=False, verbose_name='Присутствие')),
                ('id_lesson', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.lessonstime')),
                ('id_student', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.students')),
                ('id_subject', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='Schedule.subjects')),
            ],
            options={
                'verbose_name': 'Посещаемость',
                'verbose_name_plural': 'Посещаемость',
                'ordering': ['-id'],
            },
        ),
    ]
